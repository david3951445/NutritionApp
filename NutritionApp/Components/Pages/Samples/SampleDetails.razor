@page "/samples/details/{Id}"
@using Microsoft.EntityFrameworkCore
@using NutritionApp.Components.Charting
@using SampleDatabaseBuilder.Services
@inject NavigationManager NavigationManager
@inject SampleService SampleService
@rendermode InteractiveServer

@if (Sample == null)
{
	<h1>查無整合編號為"@Id"的樣品</h1>
	return;
}

<h1>樣品詳細資料</h1>
<FluentDivider></FluentDivider>

<FluentStack Orientation="Orientation.Vertical">
	@if (NameValues.Any())
	{
		<FluentGrid Spacing="1">
			@foreach (var nameValue in NameValues)
			{
				<FluentGridItem xs="12" sm="6">
					<FluentCard MinimalStyle="true">
						<FluentLabel Typo="Typography.H2">@nameValue.Key</FluentLabel>
						<FluentLabel Typo="Typography.H4">@nameValue.Value</FluentLabel>
					</FluentCard>
				</FluentGridItem>
			}
		</FluentGrid>
	}

	@if (AnalysisItemsByCatagory.Any())
	{
		@foreach (var pair in AnalysisItemsByCatagory)
		{
			<FluentCard MinimalStyle="true">
				<FluentGrid>
					<FluentGridItem xs="12">
						<FluentLabel Typo="Typography.H2">@pair.Key</FluentLabel>
					</FluentGridItem>
					<FluentGridItem xs="12" sm="6">
						<FluentDataGrid Items="@pair.Value.AsQueryable()" Style="width: 60%; table-layout: auto;">
							<PropertyColumn Title="分析項名稱" Property="@(i => i.AnalysisItemInfo.Name)" />
							<PropertyColumn Title="單位" Property="@(i => i.AnalysisItemInfo.Unit)" />
							<PropertyColumn Title="每100g含量" Property="@(i => i.Value)" />
						</FluentDataGrid>
					</FluentGridItem>
					<FluentGridItem xs="12" sm="6" HiddenWhen="GridItemHidden.SmAndDown">
						@if (PieData[pair.Key].Any())
						{
							<PieChart Labels="PieData[pair.Key].Keys.ToList()" Data="PieData[pair.Key].Values.ToList()" />
						}
					</FluentGridItem>
				</FluentGrid>
			</FluentCard>
		}
	}
</FluentStack>

<button @onclick="GoBack">Go Back</button>

@code {
	[Parameter] public string? Id { get; set; }

	Sample? Sample { get; set; }
	Dictionary<string, string> NameValues = [];
	Dictionary<string, AnalysisItem[]> AnalysisItemsByCatagory = [];
	Dictionary<string, Dictionary<string, double>> PieData = [];

	protected override async Task OnInitializedAsync()
	{
		if (string.IsNullOrEmpty(Id))
			throw new ArgumentException("Sample ID is required.");

		Sample = await SampleService.GetSampleAsync(Id);
		if (Sample == null)
			return;

		NameValues = new()
			{
				["整合編號"] = Sample.Id,
				["樣品名稱"] = Sample.Name,
				["俗名"] = Sample.CommonName ?? string.Empty,
				["英文名稱"] = Sample.EnglishName ?? string.Empty,
				["內容物描述"] = Sample.ContentDescription ?? string.Empty,
				["食品分類"] = Sample.FoodCatagory.Name
			};

		AnalysisItemsByCatagory = Sample.AnalysisItemsByCatagory;

		PieData = AnalysisItemsByCatagory.ToDictionary(ci => ci.Key, ci =>
		{
			var items = from ai in ci.Value
						let value = ai.GetValueInMg()
						where value.HasValue && value > 0 && !ai.AnalysisItemInfo.Name.Contains("總量")
						select new { ai.AnalysisItemInfo.Name, value.Value };
			var total = items.Sum(x => x.Value);
			if (total == 0)
				return [];
			return items.ToDictionary(x => x.Name, x => Math.Round(x.Value / total * 100, 2));
		});
	}

	private void GoBack()
	{
		NavigationManager.NavigateTo("/samples/list", forceLoad: true);
	}
}
