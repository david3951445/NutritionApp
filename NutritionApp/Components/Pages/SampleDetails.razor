@page "/sample-details/{IntegrationId}"
@using Microsoft.EntityFrameworkCore
@inject NavigationManager NavigationManager
@inject IDbContextFactory<SamplesContext> DbFactory
@* @inject HttpClient HttpClient *@

<h3>Sample Details</h3>

@if (Sample != null)
{
	var analysisItems = Sample.AnalysisItemCatagories
	.SelectMany(x => x.AnalysisItems.Select(i => new
	{
		分析項分類 = x.Name,
		分析項 = i.Name,
		單位 = i.Unit,
		每100克含量 = i.Value
	}))
	.ToArray();
	@for (var i = 0; i < analysisItems.Length; i++)
	{
		var item = analysisItems[i];
		<tr>
			<td>@i</td>
			<td>@item.分析項分類</td>
			<td>@item.分析項</td>
			<td>@item.單位</td>
			<td>@item.每100克含量</td>
		</tr>
	}
	<button @onclick="GoBack">Back to List</button>
}
else if (IsLoading)
{
	<p>Loading...</p>
}
else
{
	<p>Sample not found.</p>
}

@code {
	[Parameter] public string IntegrationId { get; set; }

	private Sample? Sample { get; set; }
	private bool IsLoading { get; set; } = true;

	protected override async Task OnInitializedAsync()
	{
		// string uri = NavigationManager.BaseUri + "samples";
		// var response = await HttpClient.GetFromJsonAsync<List<Sample>>(uri); // 注意這裡是相對路徑
		// Sample = response?.FirstOrDefault();

		using var context = DbFactory.CreateDbContext();
		Sample = await context.Samples.FindAsync(IntegrationId);

		IsLoading = false;
	}

	private void GoBack()
	{
		NavigationManager.NavigateTo("/samples");
	}
}
