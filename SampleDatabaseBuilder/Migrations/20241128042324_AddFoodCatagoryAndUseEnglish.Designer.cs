// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SampleDatabaseBuilder.Migrations
{
    [DbContext(typeof(SamplesContext))]
    [Migration("20241128042324_AddFoodCatagoryAndUseEnglish")]
    partial class AddFoodCatagoryAndUseEnglish
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("AnalysisItem", b =>
                {
                    b.Property<int>("AnalysisItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnalysisItemCatagoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AnalysisItemId");

                    b.HasIndex("AnalysisItemCatagoryId");

                    b.ToTable("AnalysisItem");
                });

            modelBuilder.Entity("AnalysisItemCatagory", b =>
                {
                    b.Property<int>("AnalysisItemCatagoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SampleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AnalysisItemCatagoryId");

                    b.HasIndex("SampleId");

                    b.ToTable("AnalysisItemCatagory");
                });

            modelBuilder.Entity("Sample", b =>
                {
                    b.Property<string>("SampleId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CommonName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContentDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FoodCatagory")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SampleId");

                    b.ToTable("Samples");
                });

            modelBuilder.Entity("AnalysisItem", b =>
                {
                    b.HasOne("AnalysisItemCatagory", "AnalysisItemCatagory")
                        .WithMany("AnalysisItems")
                        .HasForeignKey("AnalysisItemCatagoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnalysisItemCatagory");
                });

            modelBuilder.Entity("AnalysisItemCatagory", b =>
                {
                    b.HasOne("Sample", "Sample")
                        .WithMany("AnalysisItemCatagories")
                        .HasForeignKey("SampleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sample");
                });

            modelBuilder.Entity("AnalysisItemCatagory", b =>
                {
                    b.Navigation("AnalysisItems");
                });

            modelBuilder.Entity("Sample", b =>
                {
                    b.Navigation("AnalysisItemCatagories");
                });
#pragma warning restore 612, 618
        }
    }
}
